![image.png](https://pic.leetcode-cn.com/1632968884-EEGrgU-image.png)

其实和很多数据结构的底层一样，使用二进制存储信息，让我想起比如 <<并发编程之美>>中关于读写锁的讲述
![image.png](https://pic.leetcode-cn.com/1632969299-NegnDA-image.png)

`分析`

如果使用额外的数据结构，一个hashset就ok了。或者由于字符的有限性，创建一个128长度的数组就行。

如果使用位运算，面试肯定会很加分，学习一下。

`学习`

`前提`常用知识

a & (1<<k) 用于判断a的第k位数字是0是1，其实和我们使用数组差不错。相等于 nums[k];

a | (1<<k) 用于将a的第k位数字赋值为1, 相当于nums[k]=1

ASCII码的字符个数为128个，我们可以使用两个64位，8字节的long变量来存储是否出现某个字符，二进制位1表示出现过，0表示没有出现过。
`代码`

* java

```java
class Solution {
    public boolean isUnique(String s) {
     long left=0;
     long right=0;
     for(char c:s.toCharArray()){
       if(c>=64){
      long bitIndex=1L <<(c-64);
      if((left & bitIndex)!=0){
          return   false;
      }
      left |=bitIndex;
     }else{
         long bitIndex=1L <<c;
         if((right & bitIndex)!=0){
             return false;
         }
          right |=bitIndex;
     }
     }
   return true;
    }
}
```

