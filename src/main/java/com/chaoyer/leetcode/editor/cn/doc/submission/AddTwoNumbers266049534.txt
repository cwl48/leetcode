/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode head = null,tail = null;
        int carry = 0;
        while (l1 != null || l2 != null) {

            int l1num = l1==null?0:l1.val;
            int l2num = l2==null?0:l2.val;

            int sum = l1num+l2num+carry;
            int cur = sum%10;
            if(head==null){
                head =tail= new ListNode(cur);
            }else{
                tail.next = new ListNode(cur);
                tail = tail.next;
            }
            if(l1!=null){
                l1 = l1.next;
            }
            if(l2!=null){
                l2 = l2.next;
            }
            carry = sum/10;
        }

        if(carry>0){
            tail.next = new ListNode(carry);
        }

        return head;
    }
}
//runtime:1 ms
//memory:41.3 MB
