func threeSum(nums []int) [][]int {
   	array := make([][]int, 0, 0)
	arr := make([]int, 0, 0)
	sort.Ints(nums)

	
	for i := 0; i < len(nums)-2; i++ {
		low, high := i+1, len(nums)-1
		sum := 0 - nums[i]
		if i==0||i>0&&nums[i]!=nums[i-1]{
		for low < high {
			if sum == nums[low]+nums[high] {
				arr = []int{nums[i], nums[low], nums[high]}
				array = append(array, arr)
				for low < high && nums[low] == nums[low+1] {
					low++
				}
				for low < high && nums[high] == nums[high-1] {
					high--
				}
				low++
				high--
			} else if sum > nums[low]+nums[high] {
				low++
			} else {
				high--
			}
		}
	}
	    
	}
	return array
}
//runtime:1928 ms
//memory:N/A
